/*
Реализуйте и экспортируйте по умолчанию функцию smallestDivisor, используя итеративный процесс. 
Функция должна находить минимальный делитель переданного числа.
Для этого достаточно последовательно проверять делимость, начиная с двойки. 
Если делитель не найден, значит число простое и делителем является само число.
Доп. условия: число, передаваемое в функцию, больше нуля 
(т.е. соответсвующую проверку делать не надо); делитель должен быть больше единицы, 
за исключением случая, когда аргументом является единица (наименьшим делителем которой является также единица).
*/

// Итеративный процесс:
const smallestDivisor = (num) => {
  const iter = (num, divisor) => {
    if (num===1) {
      return divisor=1;
    } else if (num%divisor===0) {
      return divisor;
    } else {
      return iter(num, divisor+1);
    }
  };

  return iter (num, 2);
};

// Цикл:
const smallestDivisor = (num) => {
  let divisor = 2;
  if (num===1) {
      return divisor - 1;
  }
  if (num<1) {
      return NaN;
  }
  while (num%divisor != 0) {
    divisor = divisor + 1;
  }
return divisor;

};